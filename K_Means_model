import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.preprocessing import StandardScaler
from sklearn.cluster import KMeans

data= {'CustomerID': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],
    'AnnualSpend': [500, 700, 1200, 1500, 1600, 4000, 5000, 7000, 8000, 10000],
    'NumPurchases': [5, 7, 12, 15, 18, 30, 40, 50, 55, 60],
    'YearsAsCustomer': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]}
df=pd.DataFrame(data)

print(df.columns) 
print(df)

scaler=StandardScaler()
df_scaled=scaler.fit_transform(df)

inertia = []
K_range = range(1, 11)

for k in K_range:
    kmeans = KMeans(n_clusters=k, random_state=42)
    kmeans.fit(df_scaled)
    inertia.append(kmeans.inertia_)

plt.plot(K_range, inertia, 'bo-')
plt.xlabel('Number of Clusters')
plt.ylabel('Inertia')
plt.title('Elbow Method to Determine Optimal k')
plt.show()

#we take elbow point from the graph to be equal to 2
kmeans = KMeans(n_clusters=2, random_state=42)
df['Cluster'] = kmeans.fit_predict(df_scaled)

plt.figure(figsize=(8,6))
sns.scatterplot(x=df['AnnualSpend'], y=df['NumPurchases'], hue=df['Cluster'], palette='viridis')
plt.xlabel('Annual Spend ($)')
plt.ylabel('Number of Purchases')
plt.title('Customer Segments')
plt.legend(title='Cluster')
plt.show()
